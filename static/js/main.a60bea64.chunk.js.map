{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Contact.js","Components/Testimonials.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","data","name","occupation","networks","description","address","city","social","map","network","href","url","className","id","title","typing","Footer","About","profilepic","image","bio","province","phone","email","resumeDownload","resumedownload","src","alt","download","Resume","skillmessage","education","school","degree","graduated","description_1","work","company","years","skills","toLowerCase","style","width","height","value","level","Contact","useState","setName","setEmail","subject","setSubject","message","setMessage","contactName","street","state","zip","contactEmail","contactMessage","contactmessage","submitForm","window","open","encodeURIComponent","onSubmit","htmlFor","type","defaultValue","size","onChange","e","target","cols","rows","onClick","Testimonials","testimonials","text","user","Portfolio","projects","projectImage","category","App","resumeData","setResumeData","useEffect","fetch","then","res","json","main","resume","portfolio","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a60bea64.chunk.js","sourcesContent":["import React from \"react\";\nimport TypeWriter from \"react-typewriter\";\n\n// TypeWriter is a component from react-typewriter\n// This gives the type writer effect to the text\n\n\n\nconst Header = ({ data }) => {\n  if (data) {\n    var name = data.name;\n    var occupation = data.occupation;\n    var description = data.description;\n    var city = data.address.city;\n    var networks = data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url}>\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n  }\n\n// Here is the main header which shows the top navbar\n  return (\n    <header id=\"home\">\n      <nav id=\"nav-wrap\">\n        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n          Show navigation\n        </a>\n        <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n          Hide navigation\n        </a>\n        \n        <ul id=\"nav\" className=\"nav\">\n          <li className=\"current\">\n            <a className=\"smoothscroll\" href=\"#home\">\n              Home\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#about\">\n              About\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#resume\">\n              Resume\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#portfolio\">\n              Works\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#testimonials\">\n              Testimonials\n            </a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#contact\">\n              Contact\n            </a>\n          </li>\n        </ul>\n      </nav>\n\n      <div className=\"row banner\">\n        <div className=\"banner-text\">\n          <h1 className=\"responsive-headline\">\n            <TypeWriter typing={0.5}>{name ? `I'm ${name}.` : null}</TypeWriter>\n          </h1>\n          <h3>\n            <span>{occupation}</span>\n          </h3>\n          <hr />\n          <ul className=\"social\">{networks}</ul>\n        </div>\n      </div>\n\n      <p className=\"scrolldown\">\n        <a className=\"smoothscroll\" href=\"#about\">\n          <i className=\"icon-down-circle\"></i>\n        </a>\n      </p>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\n// Footer\nconst Footer = ({ data }) => {\n  if (data) {\n    var networks = data.social.map(function (network) {\n      return (\n        <li key={network.name}>\n          <a href={network.url}>\n            <i className={network.className}></i>\n          </a>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">{networks}</ul>\n\n          <ul className=\"copyright\">\n            <li>\n              Made by{\" \"}\n              <a href=\"https://github.com/CStokan\">\n                Cooper Stokan\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div id=\"go-top\">\n          <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n            <i className=\"icon-up-open\"></i>\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst About = ({ data }) => {\n  if (data) {\n    var name = data.name;\n    var profilepic = \"images/\" + data.image;\n    var bio = data.bio;\n    var city = data.address.city;\n    var province = data.address.province;\n    var phone = data.phone;\n    var email = data.email;\n    var resumeDownload = data.resumedownload;\n  }\n\n  return (\n    <section id=\"about\">\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <img\n            className=\"profile-pic\"\n            src={profilepic}\n            alt=\"Sonny's Profile Pic\"\n          />\n        </div>\n        <div className=\"nine columns main-col\">\n          <h2>About Me</h2>\n\n          <p>{bio}</p>\n          <div className=\"row\">\n            <div className=\"columns contact-details\">\n              <h2>Contact Details</h2>\n              <p className=\"address\">\n                <span>{name}</span>\n                <br />\n                <span>\n                  {city}, {province}\n                </span>\n                <br />\n                <span>{phone}</span>\n                <br />\n                <span>{email}</span>\n              </p>\n            </div>\n            <div className=\"columns download\">\n              <p>\n                <a href={resumeDownload} download className=\"button\">\n                  <i className=\"fa fa-download\"></i>Download Resume\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { CircularProgressbar, CircularProgressbarWithChildren } from \"react-circular-progressbar\";\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst Resume = ({ data }) => {\n  if (data) {\n    var skillmessage = data.skillmessage;\n    var education = data.education.map(function (education) {\n      // Grabs education data and displays it\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}<br/>{education.description_1}</p>\n        </div>\n      );\n    });\n    // Grabs my work data and displays it\n    var work = data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}<br/>{work.description_1}</p>\n        </div>\n        \n      );\n    });\n    // This is where my skills are displayed using  circular progress\n    var skills = data.skills.map(function (skills) {\n      var className = \"bar-expand \" + skills.name.toLowerCase();\n      return (\n        \n          <div style={{width:200, height:200}} className=\"columns skils-item\">\n            <div className=\"item-wrap \">\n            <CircularProgressbarWithChildren value={skills.level}>\n              {/* Put any JSX content in here that you'd like. It'll be vertically and horizonally centered. */}\n                <strong>{skills.level}%</strong> {skills.name}\n            </CircularProgressbarWithChildren>\n            </div>\n          </div>\n        \n        \n      );\n    });\n  }\n\n  return (\n    <section id=\"resume\">\n      <div className=\"row education\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Education</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <div className=\"row item\">\n            <div className=\"twelve columns\">{education}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row work\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Work</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">{work}</div>\n      </div>\n\n      <div className=\"row skill\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Skills</span>\n          </h1>\n        </div>\n      \n        <div> \n            <p>{skillmessage}</p>\n            <div className=\"row-skill\">\n              <div \n                className=\"bgrid-quarters s-bgrid-thirds\"> \n                  {skills} \n              </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Resume;\n","import React, { useState } from \"react\";\n// Email constants\nconst Contact = ({ data }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  if (data) {\n    var contactName = data.name;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var contactEmail = data.email;\n    var contactMessage = data.contactmessage;\n  }\n\n  // Submit form for email\n  const submitForm = () => {\n    window.open(\n      `mailto:${contactEmail}?subject=${encodeURIComponent(\n        subject\n      )}&body=${encodeURIComponent(name)} (${encodeURIComponent(\n        email\n      )}): ${encodeURIComponent(message)}`\n    );\n  };\n\n  // Contact form\n  return (\n    <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"two columns header-col\">\n          <h1>\n            <span>Get In Touch.</span>\n          </h1>\n        </div>\n\n        <div className=\"ten columns\">\n          <p className=\"lead\">{contactMessage}</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"eight columns\">\n          <form onSubmit={submitForm}>\n            <fieldset>\n              <div>\n                <label htmlFor=\"contactName\">\n                  Name <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={name}\n                  size=\"35\"\n                  id=\"contactName\"\n                  name=\"contactName\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactEmail\">\n                  Email <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={email}\n                  size=\"35\"\n                  id=\"contactEmail\"\n                  name=\"contactEmail\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactSubject\">Subject</label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={subject}\n                  size=\"35\"\n                  id=\"contactSubject\"\n                  name=\"contactSubject\"\n                  onChange={(e) => setSubject(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactMessage\">\n                  Message <span className=\"required\">*</span>\n                </label>\n                <textarea\n                  cols=\"50\"\n                  rows=\"15\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  id=\"contactMessage\"\n                  name=\"contactMessage\"\n                ></textarea>\n              </div>\n\n              <div>\n                <button onClick={submitForm} type=\"submit\" className=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </fieldset>\n          </form>\n\n          <div id=\"message-warning\"> Error boy</div>\n          <div id=\"message-success\">\n            <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n            <br />\n          </div>\n        </div>\n\n        <aside className=\"four columns footer-widgets\">\n          <div className=\"widget widget_contact\">\n            <h4>Address and Phone</h4>\n            <p className=\"address\">\n              {contactName}\n              <br />\n              {contactEmail}\n              <br />\n              <br />\n              {street} <br />\n              {city}, {state} {zip}\n              <br />\n              <span>{phone}</span>\n            </p>\n          </div>\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Testimonials = ({ data }) => {\n  if (data) {\n    var testimonials = data.testimonials.map(function (testimonials) {\n      return (\n        <li key={testimonials.user}>\n          <blockquote>\n            <p>{testimonials.text}</p>\n            <cite>{testimonials.user}</cite>\n          </blockquote>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <section id=\"testimonials\">\n      <div className=\"text-container\">\n        <div className=\"row\">\n          <div className=\"two columns header-col\">\n            <h1>\n              <span>Client Testimonials</span>\n            </h1>\n          </div>\n\n          <div className=\"ten columns flex-container\">\n            <ul className=\"slides\">{testimonials}</ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Testimonials;\n","import React from \"react\";\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\";\nimport 'react-circular-progressbar/dist/styles.css';\n\n// This is the Portfolio component\n// It takes the data passed to it and shows projects that I've worked on\nconst Portfolio = ({ data }) => {\n  if (data) {\n    var projects = data.projects.map(function (projects) {\n      var projectImage = \"images/portfolio/\" + projects.image;\n      return (\n        <div key={projects.title} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n              <img alt={projects.title} src={projectImage} />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                  <h5>{projects.title}</h5>\n                  <p>{projects.category}</p>\n                </div>\n              </div>\n              <div className=\"link-icon\">\n                <i className=\"fa fa-link\"></i>\n              </div>\n            </a>\n          </div>\n        </div>\n      );\n    });\n  }\n  return (\n    <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Some projects I have worked on.</h1>\n\n          <div\n            id=\"portfolio-wrapper\"\n            className=\"bgrid-quarters s-bgrid-thirds cf\"\n          >\n            {projects}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;\n","import React, { useEffect, useState } from \"react\";\n\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\nimport Testimonials from \"./Components/Testimonials\";\nimport Portfolio from \"./Components/Portfolio\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [resumeData, setResumeData] = useState({});\n\n  useEffect(() => {\n    fetch(\"/Portfolio/resumeData.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        setResumeData(data);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header data={resumeData.main} />\n      <About data={resumeData.main} />\n      <Resume data={resumeData.resume} />\n      <Portfolio data={resumeData.portfolio} />\n      <Testimonials data={resumeData.testimonials} />\n      <Contact data={resumeData.main} />\n      <Footer data={resumeData.main} />\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}